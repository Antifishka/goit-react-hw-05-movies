{"version":3,"file":"static/js/763.f5146bae.chunk.js","mappings":"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","sources":["constants/constants.js","pages/MovieDetails/MovieDetails.styled.js","components/BackButton/BackButton.styled.js","components/BackButton/BackButton.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["export const BASE_IMAGE_URL = `https://image.tmdb.org/t/p/w500`;\nexport const PlACEHOLDER_IMAGE_URL = `https://via.placeholder.com/100x150`;\nexport const PlACEHOLDER_POSTER_URL = `https://placehold.jp/200x300.png`;","import styled from \"styled-components\";\n\nexport const MovieBox = styled.div`\n  display: flex;\n  padding: 8px 0 16px 0;\n  border-bottom: 1px solid black;\n`;\n\nexport const MovieImg = styled.img`\n  box-shadow: 0px 1px 1px rgb(0 0 0 / 12%), \n  0px 4px 4px rgb(0 0 0 / 6%), \n  1px 4px 6px rgb(0 0 0 / 16%);\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 20px;\n  padding: 20px;\n`;\n\nexport const MovieGenres = styled.ul`\n  display: flex;\n  gap: 8px;\n\n`;\n\nexport const MovieCastBox = styled.div`\n  padding: 16px 0;\n  border-bottom: 1px solid black;\n`;\n\nexport const MovieText = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 5px;\n  margin-left: 20px;\n  list-style: inside;\n\n  :last-child{\n    margin-bottom: 0px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  width: 96px;\n  margin-top: 8px;\n  padding: 8px 0;\n  border-radius: 4px;\n\n  text-decoration: none;\n  font-size: 16px;\n\n  color: black;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n              background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n:hover,\n:focus {\n  color: white;\n  background-color: orangered;\n}\n`;","import { useLocation } from \"react-router-dom\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport { StyledLink } from \"./BackButton.styled\";\n\nexport const BackButton = ({children}) => {\n    const { state } = useLocation();\n\n    if (!state?.from) {\n        return null;\n    };\n\n    return <StyledLink to={state.from}>\n        <BsArrowLeft size={16}/>\n        {children}</StyledLink>\n}","import { useState, useEffect, Suspense } from \"react\";\nimport { useParams, Link, Outlet } from \"react-router-dom\";\nimport API from \"../../services/api\";\nimport { BASE_IMAGE_URL, PlACEHOLDER_POSTER_URL } from 'constants/constants';\nimport { MovieBox, MovieImg, MovieInfo, MovieCastBox, MovieGenres, MovieText, MovieItem } from \"./MovieDetails.styled\";\nimport { BackButton } from \"components/BackButton/BackButton\";\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  \n  useEffect(() => {\n    getMovieById();\n\n    async function getMovieById() {\n      try {\n        const fetchMovie = await API.fetchMovieById(Number(movieId));\n        console.log(fetchMovie);\n        setMovie(fetchMovie);\n\n      } catch (error) {\n        console.log(error);\n      };\n    };\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { poster_path, title, vote_average, overview, genres, release_date } = movie;\n\n  const imagePath = poster_path\n    ? BASE_IMAGE_URL + poster_path\n    : PlACEHOLDER_POSTER_URL;\n\n  const year = release_date ? release_date.slice(0, 4) : `No year`;\n\n  const userScore = () => {\n    return Math.round(vote_average * 10);\n  }\n\n  // const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <main>\n      <BackButton>Go back</BackButton>\n\n      <MovieBox> \n        <MovieImg src={imagePath} alt={title} width=\"200\"/>\n        <MovieInfo>\n          <h2>{title}\n            <span> ({year})</span>\n          </h2>\n          <p>User Score {userScore()}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <MovieGenres>\n            {genres?.map(({id, name}) => <li key={id}>{name}</li>)}\n          </MovieGenres>\n        </MovieInfo>\n      </MovieBox>\n      \n      <MovieCastBox>\n        <MovieText>Additional infomation</MovieText>\n        <ul>\n          <MovieItem>\n            <Link to=\"cast\">Cast</Link>\n          </MovieItem>\n          <MovieItem>\n            <Link to=\"reviews\">Reviews</Link>\n          </MovieItem>\n        </ul>\n      </MovieCastBox>\n\n      <Suspense fallback={null}>\n        <Outlet/>\n      </Suspense> \n    </main>\n  );\n};\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst apiInstance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: 'e09f06c48afcb3ebfd8a25b0b6965d1e',\n        language: 'en-US',\n        // page: `${page}`,\n    },\n});\n\nasync function fetchTrendingMovies() {\n    const response = await apiInstance.get('trending/movie/day');\n     \n    const trendingMovies = response.data.results;\n\n    if (!trendingMovies.length) {\n        throw new Error(`Sorry, there are no movies matching your search query. Please try again.`)\n    }\n\n    return trendingMovies;\n};\n\nasync function fetchMovieById(id) {\n    const { data } = await apiInstance.get(`movie/${id}`);\n\n    return data;\n}\n\nasync function fetchSearchMovies(query) {\n    const response = await apiInstance.get(`search/movie?query=${query}`);\n\n    const searchMovies = response.data.results;\n\n    if (!searchMovies.length) {\n        throw new Error(`Sorry, there are no movies matching your search query. Please try again.`)\n    }\n\n    return searchMovies;\n}\n\nasync function fetchMovieCredits(id) {\n    const response = await apiInstance.get(`movie/${id}/credits`);\n\n    const cast = response.data.cast;\n\n    if (!cast.length) {\n        throw new Error(`Not found cast...`)\n    }\n\n    return cast;\n}\n\nasync function fetchMovieReviews(id) {\n    const response = await apiInstance.get(`movie/${id}/reviews`);\n\n    const reviews = response.data.results;\n\n    return reviews;\n};\n\nconst api = {\n    fetchTrendingMovies,\n    fetchMovieById,\n    fetchSearchMovies,\n    fetchMovieCredits,\n    fetchMovieReviews,\n};\n\nexport default api;"],"names":["BASE_IMAGE_URL","PlACEHOLDER_IMAGE_URL","PlACEHOLDER_POSTER_URL","MovieBox","styled","MovieImg","MovieInfo","MovieGenres","MovieCastBox","MovieText","MovieItem","StyledLink","Link","BackButton","children","state","useLocation","from","to","size","movieId","useParams","useState","movie","setMovie","useEffect","API","Number","fetchMovie","console","log","getMovieById","poster_path","title","vote_average","overview","genres","release_date","imagePath","year","slice","src","alt","width","Math","round","map","id","name","Suspense","fallback","apiInstance","axios","baseURL","params","api_key","language","fetchTrendingMovies","get","response","trendingMovies","data","results","length","Error","fetchMovieById","fetchSearchMovies","query","searchMovies","fetchMovieCredits","cast","fetchMovieReviews","reviews","api"],"sourceRoot":""}